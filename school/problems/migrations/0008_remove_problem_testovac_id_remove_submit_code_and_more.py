# Generated by Django 5.2.1 on 2025-05-26 17:46

from pathlib import Path

from django.conf import settings
from django.db import migrations, models, transaction

import school.problems.models


@transaction.atomic
def migrate(apps, schema_editor):
    Problem = apps.get_model("problems", "Problem")
    Submit = apps.get_model("problems", "Submit")

    for problem in Problem.objects.all():
        problem.judge_namespace = ""
        problem.judge_task = problem.testovac_id
        problem.slug = problem.testovac_id
        problem.save()

    for submit in Submit.objects.all():
        file_path = school.problems.models.submit_file_filepath(
            submit, f"submit.{submit.language}"
        )
        path = settings.MEDIA_ROOT / Path(file_path)
        path.parent.mkdir(parents=True, exist_ok=True)
        with path.open("w") as f:
            f.write(submit.code)

        submit.program = file_path
        submit.save()


@transaction.atomic
def undo(apps, schema_editor):
    Problem = apps.get_model("problems", "Problem")
    Submit = apps.get_model("problems", "Submit")

    for problem in Problem.objects.all():
        problem.testovac_id = problem.judge_task
        problem.save()

    for submit in Submit.objects.all():
        if submit.program:
            path = settings.MEDIA_ROOT / Path(submit.program)
            if path.exists():
                submit.code = path.read()
                path.unlink()
        submit.language = submit.program.name.split(".")[-1] if submit.program else ""
        submit.program = ""
        submit.save()


class Migration(migrations.Migration):
    dependencies = [
        ("problems", "0007_problem_difficulty"),
    ]

    operations = [
        migrations.AddField(
            model_name="problem",
            name="judge_namespace",
            field=models.CharField(
                blank=True,
                default="",
                max_length=128,
                verbose_name="namespace v ktorom je úloha v Judgi",
            ),
        ),
        migrations.AddField(
            model_name="problem",
            name="judge_task",
            field=models.CharField(
                default="", max_length=128, verbose_name="názov úlohy pre Judge"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="problem",
            name="slug",
            field=models.SlugField(default="", max_length=64, verbose_name="slug"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="submit",
            name="program",
            field=models.FileField(
                blank=True,
                default="",
                max_length=255,
                upload_to=school.problems.models.submit_file_filepath,
                verbose_name="odovzdaný program",
            ),
        ),
        migrations.AddField(
            model_name="submit",
            name="protocol_key",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="submit",
            name="public_id",
            field=models.CharField(
                blank=True,
                default=None,
                max_length=255,
                null=True,
                unique=True,
                verbose_name="public ID submitu",
            ),
        ),
        migrations.AddField(
            model_name="submit",
            name="status",
            field=models.SmallIntegerField(
                choices=[(0, "queued"), (1, "finished"), (2, "failed")],
                default=0,
                verbose_name="status submitu na Judgi",
            ),
        ),
        migrations.AddField(
            model_name="submit",
            name="testing_status",
            field=models.CharField(
                blank=True,
                default="",
                max_length=32,
                verbose_name="status testovania na Judgi",
            ),
        ),
        migrations.RemoveField(model_name="submit", name="protocol"),
        migrations.AddField(
            model_name="submit",
            name="protocol",
            field=models.JSONField(blank=True, default=dict, verbose_name="protokol"),
        ),
        migrations.RunPython(migrate, undo),
        migrations.AlterField(
            model_name="problem",
            name="slug",
            field=models.SlugField(max_length=64, verbose_name="slug"),
        ),
        migrations.AlterField(
            model_name="submit",
            name="program",
            field=models.FileField(
                max_length=255,
                upload_to=school.problems.models.submit_file_filepath,
                verbose_name="odovzdaný program",
            ),
        ),
        migrations.AddConstraint(
            model_name="problem",
            constraint=models.UniqueConstraint(
                models.F("judge_task"),
                models.F("judge_namespace"),
                name="problem__judge_task_judge_namespace",
            ),
        ),
        migrations.RemoveField(
            model_name="problem",
            name="testovac_id",
        ),
        migrations.RemoveField(
            model_name="submit",
            name="code",
        ),
    ]
